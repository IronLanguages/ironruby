<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build">

  <PropertyGroup>
    <BuildFlavour Condition=" '$(BuildFlavour)' == '' ">$(Configuration)</BuildFlavour>
    <MainPlatform Condition=" '$(MainPlatform)' == '' ">net462</MainPlatform>
    <MainBuildPrefix Condition=" '$(MainBuildPrefix)' == '' "></MainBuildPrefix>

    <NetTarget>net6.0</NetTarget>
    <FrameworkTarget>net462</FrameworkTarget>
    <RootDir>$(MSBuildThisFileDirectory)</RootDir>
    <Solution>$(RootDir)\Ruby.sln</Solution>
    <UtilDir>$(RootDir)\Util</UtilDir>
    <ReferenceDir>$(RootDir)\Util\References</ReferenceDir>
    <BinDir>$(RootDir)\bin</BinDir>
    <BuildSysDir>$(RootDir)\Build</BuildSysDir>
    <NoWarn>$(NoWarn);SYSLIB0003;CS0649;</NoWarn>
  </PropertyGroup>
    
  <Import Project="$(BuildSysDir)\Versioning.targets" />
  
  <PropertyGroup>
    <StageDir>$(RootDir)\Stage\$(BuildFlavour)\IronRuby-$(PackageVersion)</StageDir>
    <PackageDir>$(RootDir)\Package\$(BuildFlavour)\IronRuby-$(PackageVersion)</PackageDir>
  </PropertyGroup>

  <PropertyGroup>
    <BuildProperties>
      RootDir=$(RootDir);
      Solution=$(Solution);
      BuildFlavour=$(BuildFlavour);
      BinDir=$(BinDir);
      StageDir=$(StageDir);
      BuildSysDir=$(BuildSysDir);
      MainPlatform=$(MainPlatform)
    </BuildProperties>
  </PropertyGroup>
  
  <PropertyGroup>
    <NuGet>dotnet</NuGet>
    <NuGetConfig>$(RootDir)\NuGet.config</NuGetConfig>

    <Zip Condition="'$(OS)' == 'Windows_NT'">$(UtilDir)\Misc\zip.exe</Zip>
    <Zip Condition="'$(OS)' != 'Windows_NT'">zip</Zip>
  </PropertyGroup>
  
  <PropertyGroup>
    <PackageConfigTemplate>$(RootDir)\packages.config.template</PackageConfigTemplate>
    <PackageConfigOutput>$(RootDir)\packages.config</PackageConfigOutput>
  </PropertyGroup>

  <ItemGroup>
    <ReferencedPlatform Include="net462">
      <BuildPrefix></BuildPrefix>
    </ReferencedPlatform>
    <ReferencedPlatform Include="net6.0">
      <BuildPrefix></BuildPrefix>
    </ReferencedPlatform>
    <ReferencedPlatform Include="netstandard2.0">
      <BuildPrefix></BuildPrefix>
    </ReferencedPlatform>
  </ItemGroup>

  <ItemGroup>
    <MainStageFiles Include="$(RootDir)\README.md" />
    <MainStageFiles Include="$(RootDir)\LICENSE" />
  </ItemGroup>
  
  <Target Name="_MakeReferenceDir"
          Condition=" !Exists('$(ReferenceDir)') ">
    <MakeDir Directories="$(ReferenceDir)"  />
  </Target>
  
  <Target Name="_MakePackagesConfig"
          DependsOnTargets="Bootstrap"
          Inputs="$(CurrentVersionFile);@(PackageConfigTemplate);$(MSBuildThisFileFullPath)"
          Outputs="$(PackageConfigOutput)">
    <FormatTemplate TemplateFile="$(PackageConfigTemplate)"
                    OutputFile="$(PackageConfigOutput)"
                    FileType="xml"
                    Parameters="$(DlrVersion)" />
  </Target>

  <Target Name="RestoreReferences">
    <Exec Command="dotnet restore Ruby.sln" />
  </Target>
  
  <Target Name="Build" DependsOnTargets="Bootstrap">
    <MSBuild
      Projects="$(Solution)" 
      Targets="Build"
      Properties="$(BuildProperties);ReferencedPlatform=%(ReferencedPlatform.Identity);Configuration=$(BuildFlavour)" />
  </Target>

  <Target Name="BuildNet" DependsOnTargets="Bootstrap">
    <MSBuild
      Projects="$(Solution)" 
      Targets="Build"
      Properties="$(BuildProperties);ReferencedPlatform=%(ReferencedPlatform.Identity);Configuration=$(BuildFlavour);TargetFramework=$(NetTarget)" />
  </Target>

  <Target Name="BuildFramework" DependsOnTargets="Bootstrap">
    <MSBuild
      Projects="$(Solution)" 
      Targets="Build"
      Properties="$(BuildProperties);ReferencedPlatform=%(ReferencedPlatform.Identity);Configuration=$(BuildFlavour);TargetFramework=$(FrameworkTarget)" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Bootstrap">
    <MSBuild 
      Projects="$(Solution)" 
      Targets="Rebuild" 
      Properties="$(BuildProperties);ReferencedPlatform=%(ReferencedPlatform.Identity);Configuration=%(ReferencedPlatform.BuildPrefix)$(BuildFlavour)" />
  </Target>

  <Target Name="Clean">
    <MSBuild 
      Projects="$(Solution)" 
      Targets="Clean" 
      Properties="$(BuildProperties);ReferencedPlatform=%(ReferencedPlatform.Identity);Configuration=%(ReferencedPlatform.BuildPrefix)$(BuildFlavour)" />
  </Target>

  <Target Name="_MakeStageDir">
    <MakeDir Directories="$(StageDir)" Condition="!Exists('$(StageDir)')" />
  </Target>

  <Target Name="_PlatformStage" DependsOnTargets="RestoreReferences;_MakeStageDir">
    <MSBuild 
      Projects="$(Solution)" 
      Targets="Build" 
      Properties="$(BuildProperties);ReferencedPlatform=%(ReferencedPlatform.Identity);Configuration=%(ReferencedPlatform.BuildPrefix)$(BuildFlavour);Staging=true" />
  </Target>

  <Target Name="_CopyMainStageFiles" DependsOnTargets="_MakeStageDir">
    <Copy SourceFiles="@(MainStageFiles)" DestinationFolder="$(StageDir)" />
  </Target>

  <Target Name="_CopyStdLib" DependsOnTargets="_MakeStageDir">
    <MSBuild Projects="$(RootDir)\Src\StdLib\StdLib.rbproj"
             Properties="OutputPath=$(StageDir)"
             Targets="Stage" />
  </Target>

  <Target Name="_ZipStdLib" DependsOnTargets="_CopyStdLib">
    <ZipDirectory
        SourceDirectory="$(StageDir)\Lib"
        DestinationFile="$(StageDir)\..\IronRuby.StdLib-$(PackageVersion).zip" />
  </Target>

  <Target Name="_RemoveDocFiles" DependsOnTargets="_PlatformStage">
    <ItemGroup>
      <UnneededDocXMLFiles Include="$(StageDir)\*.xml" />
      <UnneededDocXMLFiles Include="$(StageDir)\DLLs\*.xml" />
    </ItemGroup>
    <Delete Files="@(UnneededDocXMLFiles)" />
  </Target>

  <PropertyGroup>
    <StageDependsOn>
      _MakeStageDir;
      _PlatformStage;
      _CopyMainStageFiles;
      _CopyStdLib;
      _ZipStdLib;
      _RemoveDocFiles
    </StageDependsOn>
  </PropertyGroup>

  <Target Name="Stage" DependsOnTargets="$(StageDependsOn)" />
  
  <Target Name="Package" DependsOnTargets="ZipPackage;NuGetPackage" />

  <Target Name="MakePackageDir">
    <MakeDir Directories="$(PackageDir)" Condition="!Exists('$(PackageDir)')" />
  </Target>

  <PropertyGroup>
    <NuSpecInputs>@(Package->'%(Package.NuSpecDir)\%(Package.Identity).nuspec')</NuSpecInputs>
    <NuPkgOutputs>@(Package->'$(PackageDir)\%(Package.Identity).$(PackageVersion).nupkg')</NuPkgOutputs>
  </PropertyGroup>

  <Target Name="NuGetPackage" DependsOnTargets="Stage;MakePackageDir"
          Inputs="$(NuSpecInputs);@(StageOutputs)"
          Outputs="$(NuPkgOutputs)">
    <Exec Command="$(NuGet) pack &quot;%(Package.NuSpecDir)\%(Package.Identity).nuspec&quot; -BasePath &quot;$(StageDir)&quot; -OutputDirectory &quot;$(PackageDir)&quot; -Version $(PackageVersion)" />
  </Target>

  <Target Name="ZipPackage" DependsOnTargets="Stage;MakePackageDir"
          Inputs="@(StageOutputs)"
          Outputs="$(PackageDir)\dlr-$(PackageVersion).zip">
    <Exec Command="$(Zip) -9 -r &quot;$(PackageDir)\IronPython-$(PackageVersion).zip&quot; &quot;IronPython-$(PackageVersion)&quot;" WorkingDirectory="$(StageDir)\.." />
  </Target>
</Project>

